version: '3.8'

services:
  # PostgreSQL 資料庫
  postgres:
    build: ./database
    container_name: law_postgres
    environment:
      POSTGRES_DB: law_management_system
      POSTGRES_USER: law_admin
      POSTGRES_PASSWORD: law_password_2024
      TZ: Asia/Taipei
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/backups:/backups
    networks:
      - law_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U law_admin -d law_management_system"]
      interval: 30s
      timeout: 10s
      retries: 3

  # API 服務
  api:
    build: ./api
    container_name: law_api
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: law_management_system
      DB_USER: law_admin
      DB_PASSWORD: law_password_2024
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      FRONTEND_URL: http://localhost:5173
      # S3 設定
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION:-ap-northeast-1}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - law_network
    restart: unless-stopped
    volumes:
      - ./api/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # LINE Bot 服務
  linebot:
    build: ./linebot
    container_name: law_linebot
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: law_management_system
      DB_USER: law_admin
      DB_PASSWORD: law_password_2024
      # LINE Bot 設定
      LINE_CHANNEL_ACCESS_TOKEN: ${LINE_CHANNEL_ACCESS_TOKEN}
      LINE_CHANNEL_SECRET: ${LINE_CHANNEL_SECRET}
      # API 服務連接
      API_BASE_URL: http://api:3000
      # S3 設定
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION:-ap-northeast-1}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - law_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx 反向代理 (可選)
  nginx:
    image: nginx:alpine
    container_name: law_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api
      - linebot
    networks:
      - law_network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  law_network:
    driver: bridge